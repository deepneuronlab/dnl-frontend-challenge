openapi: 3.0.3
info:
  title: Swagger for Companies editor
  description: |-
    Use this file in any swagger editor: [https://swagger.io/tools/swagger-editor/](https://swagger.io/tools/swagger-editor/).
  contact:
    email: denisiums@gmail.com
  version: 0.0.1
servers:
  - url: https://some-dnl-url.com/api/
tags:
  - name: companies
    description: companies CRUD
  - name: table
  - name: form
paths:
  /companies:
    get:
      tags:
        - companies
      summary: Get a list of companies
      responses:
        '200':
          description: Successful get
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
    put:
      tags:
        - companies
      summary: create a company
      requestBody:
        description: A new company object with required fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateForm'
        required: true
      responses:
        '204':
          description: |
            Company created. 
            To devs: it actually depends on the app. If we have only 1 user and no concurrency, we can return 1 item as it's described here.
            If we have a chance for multiple users operating on same companies list (especially if order is important), we need to either return the full list or a list with changes (if the whole list is too long).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: You did something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericNetworkError'
  /companies/{companyId}:
    delete:
      tags:
        - companies
      summary: delete a company
      parameters:
        - name: companyId
          in: path
          description: company ID
          required: true
          schema:
            type: string
            example: id1
      responses:
        '200':
          description: Deleted
        '404':
          description: Company not found
    post:
      tags:
        - companies
      summary: update a company
      parameters:
        - name: companyId
          in: path
          description: company ID
          required: true
          schema:
            type: string
            example: id1
      requestBody:
        description: Fields which should be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateForm'
        required: true
      responses:
        '200':
          description: |
            Company updated. 
            To devs: it actually depends on the app. If we have only 1 user and no concurrency, we can return 1 item as it's described here.
            If we have a chance for multiple users operating on same companies list, we need to either return the full list or a list with changes (if the whole list is too long).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: You did something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericNetworkError'
        '404':
          description: Company not found

components:
  schemas:
    Company:
      type: object
      required: [companyId, companyName, createdAt, updatedAt, className]
      properties:
        companyId:
          type: string
          example: id1
        companyName:
          type: string
          example: Company X
        createdAt:
          type: string
          format: date-time
          example: 2023-01-29T14:34:11.451Z
        updatedAt:
          type: string
          format: date-time
          example: 2023-01-29T14:34:11.451Z
        className:
          type: string
          example: company-item
      additionalProperties:
        oneOf:
          - type: string
          - type: integer
          - type: boolean
        example: "additional prop value"
    FormField:
      type: object
      required: [type, key, label, required]
      properties:
        type:
          type: string
          example: textField
          enum:
            - selectField
            - textField
            - radioGroup
        key:
          type: string
          example: companyName
        label:
          type: string
          example: Company Name
        placeholder:
          type: string
          example: Company Name placeholder
        required:
          type: boolean
          example: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/FormItem'
    FormItem:
      type: object
      required: [text, value]
      properties:
        text:
          type: string
          example: Dropdown item
        value:
          oneOf:
            - type: string
            - type: integer
            - type: boolean
    CompanyTableHeaderItem:
      type: object
      required: [text, value]
      properties:
        text:
          oneOf:
            - type: string
            - type: integer
          example: Some Header
        value:
          oneOf:
            - type: string
            - type: integer
          example: 42
    CompanyCreateForm:
      required: [ companyName, className ]
      properties:
        companyName:
          type: string
          example: Company X
        className:
          type: string
          example: company-item
      additionalProperties:
        oneOf:
          - type: string
          - type: integer
          - type: boolean
        example: "additional prop value"
    CompanyUpdateForm:
      properties:
        companyName:
          type: string
          example: Company X
        className:
          type: string
          example: company-item
      additionalProperties:
        oneOf:
          - type: string
          - type: integer
          - type: boolean
        example: "additional prop value"
    GenericNetworkError:
      required: [errorCode, message]
      properties:
        errorCode:
          type: string
          example: somethingWrongHappened
        message:
          type: string
          example: You've broken everything. Please fix it.


